heat_template_version: 2017-02-24

parameters:
    image:
        type: string
        description: Image type for the web server
    
    flavor:
        type: string
        description: Flavor for the web server

    net1:
        type: string
        description: net1

    net2:
        type: string
        description: net2

    subnet1:
        type: string
        description: subnet1

    http_security_group:
        type: string
        description: Nombre del grupo de seguridad por acceso a http

    postgres_security_group:
        type: string
        description: Nombre del grupo de seguridad por acceso a PostgreSQL

    icmp_security_group:
        type: string
        description: Nombre del grupo de seguridad por acceso a icmp

    ssh_security_group:
        type: string
        description: Nombre del grupo de seguridad por acceso a ssh

    pool:
        type: string
        description: LBaaS pool

    protocol_port:
        type: number
        description: Web protocol port

    db_user:
        type: string
        description: User of DB

    db_name:
        type: string
        description: Name of DB

    db_pass:
        type: string
        description: Password of DB

    db_host:
        type: string
        description: Host of DB

    db_port:
        type: string
        description: Port of DB

    LBaaS_floating_ip:
        type: string
        description: Outside address for load balancer

resources:
    vm-web_net1_port:
        type: OS::Neutron::Port
        properties:
            network_id: { get_param: net1 }
            security_groups: 
                - { get_param: http_security_group }
                - { get_param: icmp_security_group }
                - { get_param: ssh_security_group }

    vm-web_net2_port:
        type: OS::Neutron::Port
        properties:
            network_id: { get_param: net2 }
            security_groups: 
                - { get_param: postgres_security_group }
                - { get_param: icmp_security_group }
    
    vm-web:
        depends_on: [vm-web_net1_port, vm-web_net2_port]
        type: OS::Nova::Server
        properties:
            image: { get_param: image }
            flavor:  { get_param: flavor }
            networks:
                - port: { get_resource: vm-web_net1_port }
                - port: { get_resource: vm-web_net2_port }
            user_data_format: RAW
            user_data: 
                str_replace:
                    template: |
                        #!/bin/bash
                        cat >>/etc/network/interfaces <<EOL
                        auto ens4
                        iface ens4 inet dhcp
                        EOL

                        ifconfig ens4 up
                        dhclient ens4

                        cat >/web/.env <<EOL
                        production=true
                        ALLOWED_HOSTS=$LBaaS_floating_ip                        
                        DB_ENGINE=django.db.backends.postgresql
                        DB_NAME=$DB_NAME
                        DB_USER=$DB_USER
                        DB_PASS=$DB_PASS
                        DB_SERVICE=$DB_HOST
                        DB_PORT=$DB_PORT
                        EOL
                        
                        cat >/etc/systemd/system/gunicorn.service <<EOL
                        [Unit]
                        Description=gunicorn daemon
                        After=network.target

                        [Service]
                        EnvironmentFile=/web/.env
                        WorkingDirectory=/web
                        ExecStart=/usr/local/bin/gunicorn --access-logfile - -w 3 -b 127.0.0.1:8000 cnvrdemo.wsgi:application
                        EOL

                        systemctl start gunicorn

                        cat >/etc/nginx/sites-available/cnvrdemo.conf <<EOL
                        server {
                            listen 80;
                            server_name $LBaaS_floating_ip localhost;
                            location /static/ {
                                root /var/www/cnvrdemo;
                            }
                            location / {
                                include proxy_params;
                                proxy_pass http://127.0.0.1:8000;                            
                            }                                                
                        }
                        EOL
                        
                        ln -s /etc/nginx/sites-available/cnvrdemo.conf /etc/nginx/sites-enabled/cnvrdemo.conf                      
                        systemctl restart nginx

                        export ALLOWED_HOSTS=$LBaaS_floating_ip
                        export production=true                        
                        export DB_ENGINE=django.db.backends.postgresql
                        export DB_NAME=$DB_NAME
                        export DB_USER=$DB_USER
                        export DB_PASS=$DB_PASS
                        export DB_SERVICE=$DB_HOST
                        export DB_PORT=$DB_PORT
                        python3 /web/manage.py collectstatic --no-input                        
                    params:
                        $DB_USER: { get_param: db_user }
                        $DB_NAME: { get_param: db_name }
                        $DB_PASS: { get_param: db_pass }
                        $DB_HOST: { get_param: db_host }
                        $DB_PORT: { get_param: db_port }
                        $LBaaS_floating_ip: { get_param: LBaaS_floating_ip }

    vm-web_pool_member:
        depends_on: [vm-web_net1_port]
        type: OS::Neutron::LBaaS::PoolMember
        properties:
            pool: { get_param: pool }
            address: {get_attr: [vm-web_net1_port, fixed_ips, 0, ip_address]}
            protocol_port: { get_param: protocol_port }
            subnet: { get_param: subnet1 }
