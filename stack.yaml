heat_template_version: 2017-02-24

description: Escenario de demonstracion completo, con ExtNet ya creada

parameters:
    ExtNet_name:
        type: string
        description: Nombre de la red externa

    net1_name:
        type: string
        description: Nombre de la red interna
    
    subnet1_name:
        type: string
        description: Nombre de la subred asociada a la red interna
    
    subnet1_gateway:
        type: string
        description: Gateway de la subred asociada a la red interna
        
    subnet1_dns:
        type: string
        description: Servidor DNS de la subred
        
    subnet1_cidr:
        type: string
        description: CIDR de la subred
        
    subnet1_start:
        type: string
        description: Start of the allocation pool 
        
    subnet1_end:
        type: string
        description: End of the allocation pool

    net2_name:
        type: string
        description: Nombre de la red de acceso a la base de datos
    
    subnet2_name:
        type: string
        description: Nombre de la subred asociada a la red de acceso a la base de datos
    
    subnet2_gateway:
        type: string
        description: Gateway de la subred asociada a la red de acceso a la base de datos
        
    subnet2_cidr:
        type: string
        description: CIDR de la subred asociada a la red de acceso a la base de datos
        
    subnet2_start:
        type: string
        description: Start of the allocation pool 
        
    subnet2_end:
        type: string
        description: End of the allocation pool
       
    r1_name:
        type: string
        description: Nombre del router

    ssh_security_group_name:
        type: string
        description: Nombre del grupo de seguridad por acceso a ssh

    http_security_group_name:
        type: string
        description: Nombre del grupo de seguridad por acceso a http

    postgres_security_group_name:
        type: string
        description: Nombre del grupo de seguridad por acceso a PostgreSQL

    icmp_security_group_name:
        type: string
        description: Nombre del grupo de seguridad por acceso a icmp
        
    vm-admin_image:
        type: string
        description: Tipo de imagen para vm-admin
        
    vm-admin_flavor:
        type: string
        description: Tipo de flavor para vm-admin

    vm-admin_key_name:
        type: string
        description: Nombre de la pareja de claves

    vm-postgres_image:
        type: string
        description: Tipo de imagen para la vm de la base de datos

    vm-postgres_flavor:
        type: string
        description: Tipo de flavor para la vm de la base de datos

    postgres_port:
        type: number
        description: Puerto de acceso a la base de datos

    min_web_server:
        type: number
        description: Numero minimo de servidores web

    max_web_server:
        type: number
        description: Numero maximo de servidores web

    vm-web_image:
        type: string
        description: Tipo de imagen para el servidor web
    
    vm-web_flavor:
        type: string
        description: Tipo de flavor para el servidor web

    web-group_scale_cooldown:
        type: number
        description: Cooldown para la escabilidad de los servidores web

    web_scale_avg_period:
        type: number
        description: Periodo para el calculo de la utilizacion de los servidores web

    web_scaleup_thresh:
        type: number
        description: Utilizacion minima para anadir un servidor web

    web_scaledown_thresh:
        type: number
        description: Utilizacion maxima para suprimir un servidor web 

    web_protocol_port:
        type: number
        description: Port number for web server 

    web_LBaaS_port:
        type: number
        description: Port number for LBaaS

    db_pass: 
        type: string
        description: ContraseÃ±a de la base de datos
    
    db_name:
        type: string
        description: Nombre de la base de datos

    db_user:
        type: string
        description: Nombre de usuario para la base de datos  
        
resources:
    net1:
        type: OS::Neutron::ProviderNet
        properties:
            name: { get_param: net1_name }
            network_type: vlan
            
    subnet1:
        depends_on: [net1]
        type: OS::Neutron::Subnet 
        properties:
            name: { get_param: subnet1_name }
            network_id: { get_resource: net1 }
            gateway_ip: { get_param: subnet1_gateway }
            dns_nameservers: [{ get_param: subnet1_dns }]
            cidr: { get_param: subnet1_cidr }
            allocation_pools: 
                - { start: { get_param: subnet1_start }, end: { get_param: subnet1_end }}

    net2:
        type: OS::Neutron::ProviderNet
        properties:
            name: { get_param: net2_name }
            network_type: vlan
            
    subnet2:
        depends_on: [net2]
        type: OS::Neutron::Subnet 
        properties:
            name: { get_param: subnet2_name }
            network_id: { get_resource: net2 }
            gateway_ip: { get_param: subnet2_gateway }
            cidr: { get_param: subnet2_cidr }
            allocation_pools: 
                - { start: { get_param: subnet2_start }, end: { get_param: subnet2_end }}
            
    r1:
        type: OS::Neutron::Router
        properties:
            name: { get_param: r1_name }
            external_gateway_info:
                network: { get_param: ExtNet_name }
    
    r1_interface0:
        depends_on: [r1, subnet1]
        type: OS::Neutron::RouterInterface
        properties:
            router_id: { get_resource: r1 }
            subnet_id: { get_resource: subnet1}
            
    ssh_security_group:
        type: OS::Neutron::SecurityGroup 
        properties:
            description: SSH security group
            name: { get_param: ssh_security_group_name }
            rules:
            -   remote_ip_prefix: 0.0.0.0/0 
                protocol: tcp 
                port_range_min: 22 
                port_range_max: 22

    http_security_group:
        type: OS::Neutron::SecurityGroup 
        properties:
            description: SSH security group
            name: { get_param: http_security_group_name }
            rules:
            -   remote_ip_prefix: 0.0.0.0/0 
                protocol: tcp 
                port_range_min: { get_param: web_protocol_port }
                port_range_max: { get_param: web_protocol_port }
            

    postgres_security_group:
        type: OS::Neutron::SecurityGroup 
        properties: 
            description: SSH security group
            name: { get_param: http_security_group_name }
            rules:
            -   remote_ip_prefix: 0.0.0.0/0 
                protocol: tcp 
                port_range_min: { get_param: postgres_port } 
                port_range_max: { get_param: postgres_port }

    icmp_security_group:
        type: OS::Neutron::SecurityGroup 
        properties:
            description: SSH security group
            name: { get_param: http_security_group_name }
            rules:
            -   remote_ip_prefix: 0.0.0.0/0 
                protocol: icmp
                
    vm-admin_net1_port:
        depends_on: [net1, ssh_security_group, icmp_security_group]
        type: OS::Neutron::Port
        properties:
            network_id: { get_resource: net1 }
            security_groups: 
                - { get_resource: ssh_security_group }
                - { get_resource: icmp_security_group }

    vm-admin_net2_port:
        depends_on: [net2, icmp_security_group, postgres_security_group]
        type: OS::Neutron::Port
        properties:
            network_id: { get_resource: net2 }
            security_groups: 
                - { get_resource: postgres_security_group }
                - { get_resource: icmp_security_group }
            
    vm-admin_floating_ip:
        depends_on: [vm-admin_net1_port]
        type: OS::Neutron::FloatingIP
        properties:
            floating_network: { get_param: ExtNet_name }
            port_id: { get_resource: vm-admin_net1_port }
            
    vm-admin_key:
        type: OS::Nova::KeyPair
        properties:
            name: { get_param: vm-admin_key_name }
            save_private_key: true
            
    vm-admin:
        depends_on: [vm-admin_key, vm-admin_net1_port, vm-admin_net2_port, vm-postgres]
        type: OS::Nova::Server
        properties:
            image: { get_param: vm-admin_image }
            flavor:  { get_param: vm-admin_flavor }
            key_name: { get_resource: vm-admin_key }
            networks:
            - port: { get_resource: vm-admin_net1_port }
            - port: { get_resource: vm-admin_net2_port }
            user_data_format: RAW
            user_data: 
                str_replace:
                    template: |
                        #!/bin/bash                        
                        cat >>/etc/network/interfaces <<EOL
                        auto ens4
                        iface ens4 inet dhcp
                        EOL

                        ifconfig ens4 up
                        dhclient ens4

                        cat >/web/.env <<EOL
                        export production=true                        
                        export DB_ENGINE=django.db.backends.postgresql
                        export DB_NAME=$DB_NAME
                        export DB_USER=$DB_USER
                        export DB_PASS=$DB_PASS
                        export DB_SERVICE=$DB_HOST
                        export DB_PORT=$DB_PORT
                        EOL
                        
                        source /web/.env
                        python3 /web/manage.py migrate
                    params:
                        $DB_USER: { get_param: db_user }
                        $DB_NAME: { get_param: db_name }
                        $DB_PASS: { get_param: db_pass }
                        $DB_HOST: { get_attr: [vm-postgres, first_address] }
                        $DB_PORT: { get_param: postgres_port }

    vm-postgres_net2_port:
        depends_on: [net2, icmp_security_group, postgres_security_group]
        type: OS::Neutron::Port
        properties:
            network_id: { get_resource: net2 }
            security_groups: 
                - { get_resource: postgres_security_group }
                - { get_resource: icmp_security_group }

    vm-postgres:
        depends_on: [vm-postgres_net2_port]
        type: OS::Nova::Server
        properties:
            image: { get_param: vm-postgres_image }
            flavor:  { get_param: vm-postgres_flavor }
            networks:
            - port: { get_resource: vm-postgres_net2_port }
            user_data_format: RAW
            user_data:
                str_replace:
                    template: |
                        #!/bin/bash
                        docker run --name pg -e POSTGRES_PASSWORD=$DB_PASS -e POSTGRES_USER=$DB_USER -e POSTGRES_DB=$DB_NAME -p=5432:5432 --restart=always -d postgres:alpine
                    params:
                        $DB_USER: { get_param: db_user }
                        $DB_PASS: { get_param: db_pass }
                        $DB_NAME: { get_param: db_name }  

    web_LBaaS_pool:
        depends_on: [web_LBaaS_listener]
        type: OS::Neutron::LBaaS::Pool
        properties:
            lb_algorithm: ROUND_ROBIN
            protocol: HTTP
            listener: { get_resource: web_LBaaS_listener }

    web_LBaaS_listener:
        depends_on: [web_LBaaS]
        type: OS::Neutron::LBaaS::Listener
        properties:
            loadbalancer: { get_resource: web_LBaaS }
            protocol: HTTP
            protocol_port: { get_param: web_LBaaS_port }

    web_LBaaS:
        depends_on: [subnet1]
        type: OS::Neutron::LBaaS::LoadBalancer
        properties:
            vip_subnet: { get_resource: subnet1 }

    web-group:
        depends_on: [subnet1, subnet2, icmp_security_group, postgres_security_group, http_security_group, vm-postgres, web_LBaaS_pool, web_LBaaS_floating_ip]
        type: OS::Heat::AutoScalingGroup
        properties:
            min_size: { get_param: min_web_server }
            max_size: { get_param: max_web_server }
            cooldown: { get_param: web-group_scale_cooldown }
            resource:
                type: OS::CNVR::WebServer
                properties:
                    image: { get_param: vm-web_image }
                    flavor:  { get_param: vm-web_flavor }
                    net1: { get_resource: net1 }
                    net2: { get_resource: net2 }
                    subnet1: { get_resource: subnet1 }
                    http_security_group: { get_resource: http_security_group }
                    postgres_security_group: { get_resource: postgres_security_group }
                    icmp_security_group: { get_resource: icmp_security_group }
                    ssh_security_group: { get_resource: ssh_security_group }
                    protocol_port: { get_param: web_protocol_port }
                    pool: { get_resource: web_LBaaS_pool }
                    db_name: { get_param: db_name }
                    db_user: { get_param: db_user }
                    db_pass: { get_param: db_pass }
                    db_host: { get_attr: [vm-postgres, first_address] }
                    db_port: { get_param: postgres_port }
                    LBaaS_floating_ip: { get_attr: [web_LBaaS_floating_ip, floating_ip_address ]}
                    

    web-group_scaleup_policy:
        type: OS::Heat::ScalingPolicy
        properties:
            adjustment_type: change_in_capacity
            auto_scaling_group_id: { get_resource: web-group }
            cooldown: { get_param: web-group_scale_cooldown }
            scaling_adjustment: 1

    web-group_scaledown_policy:
        type: OS::Heat::ScalingPolicy
        properties:
            adjustment_type: change_in_capacity
            auto_scaling_group_id: { get_resource: web-group }
            cooldown: { get_param: web-group_scale_cooldown }
            scaling_adjustment: -1  

    web_LBaaS_floating_ip:
        depends_on: [web_LBaaS]
        type: OS::Neutron::FloatingIP
        properties:
            floating_network: { get_param: ExtNet_name }
            port_id: { get_attr: [web_LBaaS, vip_port_id ]}
        
outputs:
    LBaaS_floating_ip:
        description: External IP address of the load balancer
        value: { get_attr: [web_LBaaS_floating_ip, floating_ip_address ]}

    vm-admin_floating_ip:
        description: External IP address of the administration VM
        value: { get_attr: [vm-admin_floating_ip, floating_ip_address ]}

    vm-admin_private_key:
        description: Private key for SSH access to the administration VM
        value: { get_attr: [vm-admin_key, private_key] }             


